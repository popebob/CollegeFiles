int send(int sockfd, const void *msg, int len, int flags); 
sockfd is the socket descriptor you want to send data to (whether it's the one returned by socket() or the one you got with accept().)
msg is a pointer to the data you want to send, and len is the length of that data in bytes
Just set flags to 0. (See the send() man page for more information concerning flags.)










int sendto(int sockfd, const void *msg, int len, unsigned int flags,
           const struct sockaddr *to, socklen_t tolen); 

As you can see, this call is basically the same as the call to send() with the addition of two other pieces of information. to is a pointer to a struct sockaddr (which will probably be another struct sockaddr_in or struct sockaddr_in6 or struct sockaddr_storage that you cast at the last minute) which contains the destination IP address and port. tolen, an int deep-down, can simply be set to sizeof *to or sizeof(struct sockaddr_storage).










my added code
added variable:
  char tempbuf[BUFSIZ];                 /* temporary buffer to copy data into. */